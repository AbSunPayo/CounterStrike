generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/cs2_skin_monitor/nextjs_space/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Skin {
  id          String   @id @default(cuid())
  nome        String
  link        String   @unique
  precoAlvo   Float    // Preço em R$ que o usuário quer ser alertado
  precoAtual  Float?   // Preço atual, será atualizado pelo daemon
  status      String   @default("ativo") // "ativo", "alerta_enviado", "inativo"
  imagemUrl   String?  // URL da imagem da skin (se extraída)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relacionamento com alertas
  alertas     Alerta[]
  
  @@map("skins")
}

model Alerta {
  id            String   @id @default(cuid())
  skinId        String
  precoAtingido Float    // Preço que foi atingido quando o alerta foi disparado
  dataAlerta    DateTime @default(now())
  
  // Relacionamento com skin
  skin          Skin     @relation(fields: [skinId], references: [id], onDelete: Cascade)
  
  @@map("alertas")
}

model Configuracao {
  id                  String   @id @default(cuid())
  email               String?  // Email para receber alertas
  ultimaVerificacao   DateTime? // Data/hora da última verificação de preços
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  @@map("configuracoes")
}
